(// Test.sw, COMMENT)
(// OS.sw contains a function print, COMMENT)
(import, KEYWORD)
(OS, ID)
(;, SEPARATOR)
(// Exception.sw contains exception mechanisms, COMMENT)
(import, KEYWORD)
(Exception, ID)
(;, SEPARATOR)
(import, KEYWORD)
(MathOverflowException, ID)
(;, SEPARATOR)
(// properties, COMMENT)
(number, KEYWORD)
(array, ID)
([, OPERATOR)
(10, NUMBER)
(], OPERATOR)
(;, SEPARATOR)
(Test, ID)
(next, ID)
(=, OPERATOR)
(void, KEYWORD)
(;, SEPARATOR)
(// methods, COMMENT)
(export, KEYWORD)
(void, KEYWORD)
(say_hello, ID)
((, OPERATOR)
(), OPERATOR)
({, SEPARATOR)
(number, KEYWORD)
(i, ID)
(=, OPERATOR)
(0, NUMBER)
(;, SEPARATOR)
(while, KEYWORD)
((, OPERATOR)
(i, ID)
(<, OPERATOR)
(3, NUMBER)
(), OPERATOR)
({, SEPARATOR)
(if, KEYWORD)
((, OPERATOR)
(i, ID)
(==, OPERATOR)
(1, NUMBER)
(), OPERATOR)
({, SEPARATOR)
(OS, ID)
(., OPERATOR)
(print, ID)
((, OPERATOR)
(get_msg, ID)
((, OPERATOR)
(), OPERATOR)
(), OPERATOR)
(;, SEPARATOR)
(array, ID)
([, OPERATOR)
(i, ID)
(], OPERATOR)
(=, OPERATOR)
(i, ID)
(;, SEPARATOR)
(continue, KEYWORD)
(;, SEPARATOR)
(}, SEPARATOR)
(else, KEYWORD)
({, SEPARATOR)
(OS, ID)
(., OPERATOR)
(print, ID)
((, OPERATOR)
(add, ID)
((, OPERATOR)
(2, NUMBER)
(,, SEPARATOR)
(1.0, NUMBER)
(), OPERATOR)
(), OPERATOR)
(;, SEPARATOR)
(break, KEYWORD)
(;, SEPARATOR)
(}, SEPARATOR)
(}, SEPARATOR)
(try, KEYWORD)
({, SEPARATOR)
(Test, ID)
(t, ID)
(;, SEPARATOR)
(next, ID)
(=, OPERATOR)
(t, ID)
(;, SEPARATOR)
(}, SEPARATOR)
(catch, KEYWORD)
((, OPERATOR)
(Exception, ID)
(), OPERATOR)
({, SEPARATOR)
(OS, ID)
(., OPERATOR)
(print, ID)
((, OPERATOR)
(Exception, ID)
(., OPERATOR)
(what, ID)
((, OPERATOR)
(), OPERATOR)
(), OPERATOR)
(;, SEPARATOR)
(}, SEPARATOR)
(}, SEPARATOR)
(number, KEYWORD)
(add, ID)
((, OPERATOR)
(number, KEYWORD)
(a, ID)
(,, SEPARATOR)
(number, KEYWORD)
(b, ID)
(), OPERATOR)
(throw, KEYWORD)
(MathOverflowException, ID)
({, SEPARATOR)
(if, KEYWORD)
((, OPERATOR)
(a, ID)
(+, OPERATOR)
(b, ID)
(<, OPERATOR)
(MIN_NUMBER, ID)
(), OPERATOR)
({, SEPARATOR)
(throw, KEYWORD)
(MathOverflowException, ID)
(;, SEPARATOR)
(}, SEPARATOR)
(return, KEYWORD)
(a, ID)
(+, OPERATOR)
(b, ID)
(;, SEPARATOR)
(}, SEPARATOR)
(string, KEYWORD)
(get_msg, ID)
((, OPERATOR)
(), OPERATOR)
({, SEPARATOR)
(return, KEYWORD)
("Hello World!", STRING)
(;, SEPARATOR)
(}, SEPARATOR)
